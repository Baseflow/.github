name: Deploy Android
on:
  workflow_call:
    inputs:
      app-dir:
        required: true
        type: string
      environment: # options development|staging|production
        required: true
        type: string
      packageName: # this should be optional.. https://github.com/r0adkll/upload-google-play/issues/103
        required: true
        type: string
      target:
        required: false
        default: 'lib/main.dart'
        type: string
      pre_build_script:
        required: false
        default: ''
        type: string
      custom_build_args:
        required: false
        default: ''
        type: string
      build_number_api_url:
        required: false
        default: ''
        type: string

    secrets:
      android_key_asc:
        required: true
      android_key_passphrase:
        required: true
      android_keystore_asc:
        required: true
      android_keystore_passphrase:
        required: true
      play_store_gservice_account:
        required: true
      pre_build_params:
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options java-version
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Prebuild Script
        if: ${{ inputs.pre_build_script != ''}}
        run: sh ${{inputs.pre_build_script}} ${{secrets.pre_build_params}}
      - name: Flutter Packages Get
        run: flutter packages get
      - name: Decrypt keystore
        run: |
          echo "${{secrets.android_key_asc}}" > key.properties.asc
          echo "${{secrets.android_keystore_asc}}" > upload-keystore.jks.asc
          gpg -d --passphrase "${{ secrets.android_key_passphrase }}" --batch key.properties.asc > key.properties
          gpg -d --passphrase "${{ secrets.android_keystore_passphrase }}" --batch upload-keystore.jks.asc > upload-keystore.jks
          mkdir -p ${{inputs.app-dir}}/build/app/outputs/bundle/${{inputs.environment}}Release
          cp upload-keystore.jks ${{inputs.app-dir}}/build/app/outputs/bundle/${{inputs.environment}}Release/signingKey.jks
          export ALIAS=$(awk -F "=" '/^keyAlias/{print $NF}' key.properties)
          export KEY=$(awk -F "=" '/^keyPassword/{print $NF}' key.properties)
          export STORE_FILE=$(awk -F "=" '/^storeFile/{print $NF}' key.properties)
          export BASE64_STORE=$(openssl base64 < upload-keystore.jks | tr -d '\n' | tee upload-keystore.jks.base64.txt)
        working-directory: ${{ inputs.app-dir }}/android
      - name: Fetch Build Number
        if: ${{ inputs.build_number_api_url != '' }}
        run: touch count.json && curl ${{ inputs.build_number_api_url }} > count.json && export GITHUB_RUN_NUMBER=$(cat count.json | jq .value)
      - name: Android Build
        run: flutter build appbundle --release --flavor=${{ inputs.environment }} --build-number=$GITHUB_RUN_NUMBER -t ${{ inputs.target }} ${{inputs.custom_build_args}}
      - name: Sign app APK
        run: jarsigner --keystore ./android/upload-keystore.jks -storepass $(awk -F "=" '/^keyPassword/{print $NF}' android/key.properties) build/app/outputs/bundle/stagingRelease/app-staging-release.aab $(awk -F "=" '/^keyAlias/{print $NF}' android/key.properties)
      - name: Release APPBUNDLE to internal track
        uses: r0adkll/upload-google-play@v1.0.16
        with:
          serviceAccountJsonPlainText: ${{ secrets.play_store_gservice_account }}
          releaseFile: ${{inputs.app-dir}}/build/app/outputs/bundle/${{inputs.environment}}Release/app-${{inputs.environment}}-release.aab
          status: 'draft'
          track: internal
          packageName: ${{inputs.packageName}}
