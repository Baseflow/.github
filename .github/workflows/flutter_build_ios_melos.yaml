name: Run flutter tests
on:
  workflow_call:
    inputs:
      app-dir:
        required: true
        type: string
      environment: # options development|staging|production
        required: true
        type: string

    secrets:
      ios_provisioning_profile_password:
        required: true
      ios_provisioning_profile_asc:
        required: true
      ios_certificate_asc:
        required: true
      ios_certificate_password:
        required: true
      app_store_api_private_key:
        required: true
      app_store_issuer_id:
        required: true
      app_store_api_key_id:
        required: true

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.ios_signing_key_asc }}
          P12_PASSWORD: ${{ secrets.ios_signing_key_password }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.ios_provisioning_profile_asc }}
          KEYCHAIN_PASSWORD: ${{ secrets.ios_keychain_password }}
        run: |
          brew install libressl
          echo $(openssl version)
          echo "${{secrets.ios_provisioning_profile_asc}}" > provisioningprofile.mobileprovision.asc
          gpg -d --passphrase "${{ secrets.ios_provisioning_profile_password }}" --batch provisioningprofile.mobileprovision.asc > $RUNNER_TEMP/provisioningprofile.mobileprovision
          echo "${{secrets.ios_certificate_asc}}" > distribution.p12.asc
          gpg -d --passphrase "${{ secrets.ios_certificate_password }}" --batch distribution.p12.asc > $RUNNER_TEMP/distribution.p12

          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/distribution.p12
          PP_PATH=$RUNNER_TEMP/provisioningprofile.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # create temporary keychain
          security create-keychain -p "abcdefg" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "abcdefg" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: sh pre_build.sh ${{ inputs.environment }}
      - run: sh cli.sh --init
      - run: flutter build ipa --release --flavor ${{ inputs.environment }} --target='lib/main_${{ inputs.environment }}.dart' --export-options-plist=ios/export_options.plist
        working-directory: ${{ inputs.app-dir }}
      - name: 'Upload app to TestFlight'
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: ${{ inputs.app-path }}
          issuer-id: ${{ secrets.app_store_issuer_id}}
          api-key-id: ${{ secrets.app_store_api_key_id}}
          api-private-key: ${{ secrets.app_store_api_private_key}}
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
